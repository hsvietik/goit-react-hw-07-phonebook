{"version":3,"file":"static/js/952.15c771f3.chunk.js","mappings":"sSAEaA,EAAaC,EAAAA,EAAAA,KAAH,wMAWVC,EAAcD,EAAAA,EAAAA,MAAH,8JASXE,EAAaF,EAAAA,EAAAA,OAAH,sMAWVG,EAAeH,EAAAA,EAAAA,EAAH,yD,6BCjBnBI,EAASC,EAAAA,KAEZC,MAAM,CACLC,KAAMF,EAAAA,KAEHG,QACC,yHACA,0IAEDC,SAAS,oBACZC,OAAQL,EAAAA,KAELG,QACC,6EACA,gGAEDC,SAAS,wBAEbA,WAEI,SAASE,IAAe,IAAD,IACtBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACbC,GAAc,IAAIC,MAAOC,SAC7B,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CAAEb,KAAM,GAAIG,OAAQ,IACnCW,UAAUC,EAAAA,EAAAA,GAAYlB,KANtBmB,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,MAqBF,OACE,UAAC5B,EAAD,CAAY6B,SAAUJ,GAhBP,SAAC,GAAsB,IAApBjB,EAAmB,EAAnBA,KAAMG,EAAa,EAAbA,OAClBmB,EAAU,CACdC,UAAWd,EACXT,KAAAA,EACAG,OAAAA,EACAqB,UAAU,EACVC,IAAIC,EAAAA,EAAAA,OAENC,QAAQC,IAAIN,GACZjB,GAASwB,EAAAA,EAAAA,IAAWP,IACpBjB,GAASyB,EAAAA,EAAAA,GAAU,KACnBV,IACAb,EAAS,IAAK,CAAEwB,SAAS,GAC1B,IAGC,WACE,kBAAOC,QAAQ,OAAf,mBACA,SAACtC,GAAD,kBAAiBsB,EAAS,SAA1B,IAAmCiB,KAAK,OAAOR,GAAG,WAClD,SAAC7B,EAAD,oBAAesB,EAAOlB,YAAtB,aAAe,EAAakC,WAC5B,kBAAOF,QAAQ,SAAf,qBACA,SAACtC,GAAD,kBAAiBsB,EAAS,WAA1B,IAAqCiB,KAAK,MAAMR,GAAG,aACnD,SAAC7B,EAAD,oBAAesB,EAAOf,cAAtB,aAAe,EAAe+B,WAC9B,SAACvC,EAAD,CAAYsC,KAAK,SAAjB,2BAGL,CChED,MATA,WACE,OACE,4BACE,+DACA,SAAC7B,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/AddContact.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledForm = styled.form`\n  width: 300px;\n  display: inline-flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 30px;\n  border: solid 2px;\n  border-radius: 6px;\n  background-color: #389677;\n`;\n\nexport const StyledInput = styled.input`\n  padding: 10px;\n  border-radius: 6px;\n  background-color: #e1d5bb;\n  &:focus,\n  &:hover {\n    outline: solid 2px #c7a149;\n  }\n`;\nexport const FormButton = styled.button`\n  margin-top: 10px;\n  padding: 10px;\n  border-radius: 6px;\n  font-size: 16px;\n  background-color: #c7a149;\n  &:focus,\n  &:hover {\n    background-color: #b38f41;\n  }\n`;\nexport const ErrorMessage = styled.p`\n  margin: 0px;\n  padding: 0px;\n`;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport {\n  StyledForm,\n  StyledInput,\n  FormButton,\n  ErrorMessage,\n} from './ContactForm.styled.jsx';\nimport { addContact } from '../../redux/operations.js';\nimport { setFilter } from '../../redux/filterSlice';\n\nconst schema = yup\n  .object()\n  .shape({\n    name: yup\n      .string()\n      .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      )\n      .required('Name is required'),\n    number: yup\n      .string()\n      .matches(\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      )\n      .required('Number is required'),\n  })\n  .required();\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  let currentDate = new Date().toJSON();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    defaultValues: { name: '', number: '' },\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = ({ name, number }) => {\n    const contact = {\n      createdAt: currentDate,\n      name,\n      number,\n      favorite: false,\n      id: nanoid(),\n    };\n    console.log(contact);\n    dispatch(addContact(contact));\n    dispatch(setFilter(''));\n    reset();\n    navigate('/', { replace: true });\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      <label htmlFor=\"name\">Name</label>\n      <StyledInput {...register('name')} type=\"text\" id=\"name\" />\n      <ErrorMessage>{errors.name?.message}</ErrorMessage>\n      <label htmlFor=\"number\">Number</label>\n      <StyledInput {...register('number')} type=\"tel\" id=\"number\" />\n      <ErrorMessage>{errors.number?.message}</ErrorMessage>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </StyledForm>\n  );\n}\n","import React from 'react';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\n\nfunction AddContact() {\n  return (\n    <div>\n      <h2>Add contact using the form below </h2>\n      <ContactForm />\n    </div>\n  );\n}\n\nexport default AddContact;\n"],"names":["StyledForm","styled","StyledInput","FormButton","ErrorMessage","schema","yup","shape","name","matches","required","number","ContactForm","dispatch","useDispatch","navigate","useNavigate","currentDate","Date","toJSON","useForm","defaultValues","resolver","yupResolver","register","handleSubmit","errors","formState","reset","onSubmit","contact","createdAt","favorite","id","nanoid","console","log","addContact","setFilter","replace","htmlFor","type","message"],"sourceRoot":""}